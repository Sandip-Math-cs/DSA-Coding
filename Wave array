//===================================problem description==============================================//
Given an array of integers A, sort the array into a wave like array and return it, In other words, arrange the elements into a sequence such that 
a1 >= a2 <= a3 >= a4 <= a5.....
NOTE : If there are multiple answers possible, return the one that's lexicographically smallest.
Example Input
Input 1:   A = [1, 2, 3, 4]
Example Output
Output 1:  [2, 1, 4, 3]

Explanation 1:
One possible answer : [2, 1, 4, 3]
Another possible answer : [4, 1, 3, 2]
First answer is lexicographically smallest. So, return [2, 1, 4, 3].
/*=============================================================solution============================================*/
...............................------------when not lexicographically smallest needed,we can do in O(n) time------------------
vector<int> Solution::wave(vector<int> &A) {
  for(int i=0;i<A.size()-1;i+=2){
      if(A[i]<A[i+1])
          swap(A[i],A[i+1]);
       if(A[i+1]>A[i+2] && i<A.size()-2)
           swap(A[i+1],A[i+2]);
  }
  return A;
}
/*----------------------------------------------when need in lexicographically smallest....O(nlogn)---------------
vector<int> Solution::wave(vector<int> &A) {
  sort(A.begin(),A.end());
  for(int i=0;i<A.size()-1;i+=2){
    swap(A[i],A[i+1]);
  }
  return A;
}
