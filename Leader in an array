//====================================problem description=================================//
Given an integer array A containing N distinct integers, you have to find all the leaders in the array A.
An element is leader if it is strictly greater than all the elements to its right side.
NOTE:The rightmost element is always a leader
Example Input
Input 1: A = [16, 17, 4, 3, 5, 2]
Input 2: A = [1, 2]
Example Output
Output 1: [17, 2, 5]
Output 2: [2]
/*===============================================----solution-----=============================================*/
vector<int> Solution::solve(vector<int> &A) {
    vector<int> result;
    int rp=A[A.size()-1];
    result.push_back(rp);
    for(int i=A.size()-2;i>=0;i--){
        rp=max(rp,A[i]);
        if(rp==A[i]) {
            result.push_back(rp);
        }
    }
    return result;  
  
}
/-------------------special case---if array does not contain distinct elements----Above does not work,Why??see correct one below--------------/

vector<int> Solution::solve(vector<int> &A) {
  vector<int> result;
    int rm=A[A.size()-1];
    result.push_back(rm);
    for(int i=A.size()-2;i>=0;i--){
        if(rm<A[i])
           result.push_back(A[i]);
        rm=max(rm,A[i]);
    }
    return result;
}
